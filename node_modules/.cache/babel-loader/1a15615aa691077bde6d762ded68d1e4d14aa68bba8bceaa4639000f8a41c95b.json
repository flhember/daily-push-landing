{"ast":null,"code":"import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { b as elementParents, q as elementStyle, e as elementChildren, a as setCSSProperty, h as elementOuterSize, r as elementNextAll, t as elementPrevAll, k as getTranslate, u as animateCSSModeScroll, n as nextTick, v as showWarning, c as createElement, w as elementIsChildOf, f as now, x as extend, i as elementIndex, y as deleteProps } from './utils.mjs';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad)(?!\\1).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  const device = getDevice();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  const isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent);\n  const isSafariBrowser = isSafari();\n  const need3dFix = isSafariBrowser || isWebView && device.ios;\n  return {\n    isSafari: needPerspectiveFix || isSafariBrowser,\n    needPerspectiveFix,\n    need3dFix,\n    isWebView\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nfunction Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\nfunction Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: swiper.isElement || (typeof options.childList === 'undefined' ? true : options).childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\nfunction updateSlides() {\n  const swiper = this;\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  const swiperSize = swiper.size - offsetBefore - offsetAfter;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween - offsetBefore - offsetAfter;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slides);\n  } else if (swiper.grid) {\n    swiper.grid.unsetSlides();\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides[i];\n    if (slide) {\n      if (gridEnabled) {\n        swiper.grid.updateSlide(i, slide, slides);\n      }\n      if (elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n    }\n    if (isVirtual && params.slidesPerView === 'auto') {\n      if (params.virtual.slidesPerViewAutoSlideSize) {\n        slideSize = params.virtual.slidesPerViewAutoSlideSize;\n      }\n      if (slideSize && slide) {\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n        slide.style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    } else if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slide.style[swiper.getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slide) {\n        slide.style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slide) {\n      slide.swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize > swiperSize ? allSlidesSize - swiperSize : 0;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const offsetSize = (offsetBefore || 0) + (offsetAfter || 0);\n    if (allSlidesSize + offsetSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize - offsetSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  swiper.emit('slidesUpdated');\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\nconst toggleSlideClasses$1 = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n    }\n    toggleSlideClasses$1(slide, isVisible, params.slideVisibleClass);\n    toggleSlideClasses$1(slide, isFullyVisible, params.slideFullyVisibleClass);\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\nfunction updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}\nconst toggleSlideClasses = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  let activeSlide;\n  let prevSlide;\n  let nextSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    if (gridEnabled) {\n      activeSlide = slides.find(slideEl => slideEl.column === activeIndex);\n      nextSlide = slides.find(slideEl => slideEl.column === activeIndex + 1);\n      prevSlide = slides.find(slideEl => slideEl.column === activeIndex - 1);\n    } else {\n      activeSlide = slides[activeIndex];\n    }\n  }\n  if (activeSlide) {\n    if (!gridEnabled) {\n      // Next Slide\n      nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !nextSlide) {\n        nextSlide = slides[0];\n      }\n\n      // Prev Slide\n      prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !prevSlide === 0) {\n        prevSlide = slides[slides.length - 1];\n      }\n    }\n  }\n  slides.forEach(slideEl => {\n    toggleSlideClasses(slideEl, slideEl === activeSlide, params.slideActiveClass);\n    toggleSlideClasses(slideEl, slideEl === nextSlide, params.slideNextClass);\n    toggleSlideClasses(slideEl, slideEl === prevSlide, params.slidePrevClass);\n  });\n  swiper.emitSlidesClasses();\n}\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (!lazyEl && swiper.isElement) {\n      if (slideEl.shadowRoot) {\n        lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      } else {\n        // init later\n        requestAnimationFrame(() => {\n          if (slideEl.shadowRoot) {\n            lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n            if (lazyEl) lazyEl.remove();\n          }\n        });\n      }\n    }\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex && !swiper.params.loop) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n  if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n    swiper.realIndex = getVirtualRealIndex(activeIndex);\n    return;\n  }\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (gridEnabled) {\n    const firstSlideInColumn = swiper.slides.find(slideEl => slideEl.column === activeIndex);\n    let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n    if (Number.isNaN(activeSlideIndex)) {\n      activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n    }\n    realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n  } else if (swiper.slides[activeIndex]) {\n    const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n    if (slideIndex) {\n      realIndex = parseInt(slideIndex, 10);\n    } else {\n      realIndex = activeIndex;\n    }\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n}\nfunction updateClickedSlide(el, path) {\n  const swiper = this;\n  const params = swiper.params;\n  let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n  if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n    [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n      if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n        slide = pathEl;\n      }\n    });\n  }\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\nfunction getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\nfunction translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          swiper.animating = false;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\nfunction setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n    swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n  }\n  swiper.emit('setTransition', duration, byController);\n}\nfunction transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && dir === 'reset') {\n    swiper.emit(`slideResetTransition${step}`);\n  } else if (runCallbacks && activeIndex !== previousIndex) {\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\nfunction transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\nfunction transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\nfunction slideTo(index = 0, speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (!enabled && !internal && !initial || swiper.destroyed || swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // initial virtual\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  const isInitialVirtual = isVirtual && initial;\n  // Update Index\n  if (!isInitialVirtual && (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  const browser = getBrowser();\n  const isSafari = browser.isSafari;\n  if (isVirtual && !initial && isSafari && swiper.isElement) {\n    swiper.virtual.update(false, false, slideIndex);\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}\nfunction slideToLoop(index = 0, speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      let targetSlideIndex;\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        targetSlideIndex = swiper.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex).column;\n      } else {\n        targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n      }\n      const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n      const {\n        centeredSlides,\n        slidesOffsetBefore,\n        slidesOffsetAfter\n      } = swiper.params;\n      const bothDirections = centeredSlides || !!slidesOffsetBefore || !!slidesOffsetAfter;\n      let slidesPerView = swiper.params.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = swiper.slidesPerViewDynamic();\n      } else {\n        slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n        if (bothDirections && slidesPerView % 2 === 0) {\n          slidesPerView = slidesPerView + 1;\n        }\n      }\n      let needLoopFix = cols - targetSlideIndex < slidesPerView;\n      if (bothDirections) {\n        needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n      }\n      if (internal && bothDirections && swiper.params.slidesPerView !== 'auto' && !gridEnabled) {\n        needLoopFix = false;\n      }\n      if (needLoopFix) {\n        const direction = bothDirections ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n        swiper.loopFix({\n          direction,\n          slideTo: true,\n          activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n          slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n        });\n      }\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        newIndex = swiper.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex).column;\n      } else {\n        newIndex = swiper.getSlideIndexByData(newIndex);\n      }\n    }\n  }\n  requestAnimationFrame(() => {\n    swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  });\n  return swiper;\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const isFreeMode = params.freeMode && params.freeMode.enabled;\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && (params.cssMode || isFreeMode)) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = isFreeMode ? snapGrid[prevSnapIndex] : snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n    requestAnimationFrame(() => {\n      swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    });\n    return true;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\nfunction slideToClickedSlide() {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.getSlideIndexWhenGrid(swiper.clickedIndex);\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  const isGrid = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      swiper.slideToLoop(realIndex);\n    } else if (slideToIndex > (isGrid ? (swiper.slides.length - slidesPerView) / 2 - (swiper.params.grid.rows - 1) : swiper.slides.length - slidesPerView)) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\nfunction loopCreate(slideRealIndex, initial) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const initSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    slides.forEach((el, index) => {\n      el.setAttribute('data-swiper-slide-index', index);\n    });\n  };\n  const clearBlankSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideBlankClass}`);\n    slides.forEach(el => {\n      el.remove();\n    });\n    if (slides.length > 0) {\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    }\n  };\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (params.loopAddBlankSlides && (params.slidesPerGroup > 1 || gridEnabled)) {\n    clearBlankSlides();\n  }\n  const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n  const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n  const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n  const addBlankSlides = amountOfSlides => {\n    for (let i = 0; i < amountOfSlides; i += 1) {\n      const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n      swiper.slidesEl.append(slideEl);\n    }\n  };\n  if (shouldFillGroup) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else if (shouldFillGrid) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else {\n    initSlides();\n  }\n  const bothDirections = params.centeredSlides || !!params.slidesOffsetBefore || !!params.slidesOffsetAfter;\n  swiper.loopFix({\n    slideRealIndex,\n    direction: bothDirections ? undefined : 'next',\n    initial\n  });\n}\nfunction loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  initial,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  const {\n    centeredSlides,\n    slidesOffsetBefore,\n    slidesOffsetAfter,\n    initialSlide\n  } = params;\n  const bothDirections = centeredSlides || !!slidesOffsetBefore || !!slidesOffsetAfter;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!bothDirections && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (bothDirections && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  let slidesPerView = params.slidesPerView;\n  if (slidesPerView === 'auto') {\n    slidesPerView = swiper.slidesPerViewDynamic();\n  } else {\n    slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n    if (bothDirections && slidesPerView % 2 === 0) {\n      slidesPerView = slidesPerView + 1;\n    }\n  }\n  const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n  let loopedSlides = bothDirections ? Math.max(slidesPerGroup, Math.ceil(slidesPerView / 2)) : slidesPerGroup;\n  if (loopedSlides % slidesPerGroup !== 0) {\n    loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n  }\n  loopedSlides += params.loopAdditionalSlides;\n  swiper.loopedSlides = loopedSlides;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (slides.length < slidesPerView + loopedSlides || swiper.params.effect === 'cards' && slides.length < slidesPerView + loopedSlides * 2) {\n    showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled or not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n  } else if (gridEnabled && params.grid.fill === 'row') {\n    showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n  }\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n  const isInitialOverflow = initial && cols - initialSlide < slidesPerView && !bothDirections;\n  let activeIndex = isInitialOverflow ? initialSlide : swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(slides.find(el => el.classList.contains(params.slideActiveClass)));\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n  const activeColIndexWithShift = activeColIndex + (bothDirections && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0);\n  // prepend last slides before start\n  if (activeColIndexWithShift < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        const colIndexToPrepend = cols - index - 1;\n        for (let i = slides.length - 1; i >= 0; i -= 1) {\n          if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n        }\n        // slides.forEach((slide, slideIndex) => {\n        //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n        // });\n      } else {\n        prependSlidesIndexes.push(cols - index - 1);\n      }\n    }\n  } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n    slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n    if (isInitialOverflow) {\n      slidesAppended = Math.max(slidesAppended, slidesPerView - cols + initialSlide + 1);\n    }\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        slides.forEach((slide, slideIndex) => {\n          if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n        });\n      } else {\n        appendSlidesIndexes.push(index);\n      }\n    }\n  }\n  swiper.__preventObserver__ = true;\n  requestAnimationFrame(() => {\n    swiper.__preventObserver__ = false;\n  });\n  if (swiper.params.effect === 'cards' && slides.length < slidesPerView + loopedSlides * 2) {\n    if (appendSlidesIndexes.includes(activeSlideIndex)) {\n      appendSlidesIndexes.splice(appendSlidesIndexes.indexOf(activeSlideIndex), 1);\n    }\n    if (prependSlidesIndexes.includes(activeSlideIndex)) {\n      prependSlidesIndexes.splice(prependSlidesIndexes.indexOf(activeSlideIndex), 1);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n    swiper.slides.forEach((slide, slideIndex) => {\n      swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + Math.ceil(slidesPrepended), 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n        swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix({\n          ...loopParams,\n          slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix({\n        ...loopParams,\n        slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n      });\n    }\n  }\n  swiper.emit('loopFix');\n}\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || !slidesEl || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\nfunction unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n};\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nfunction preventEdgeSwipe(swiper, event, startX) {\n  const window = getWindow();\n  const {\n    params\n  } = swiper;\n  const edgeSwipeDetection = params.edgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const data = swiper.touchEventsData;\n  if (e.type === 'pointerdown') {\n    if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n      return;\n    }\n    data.pointerId = e.pointerId;\n  } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n    data.touchId = e.targetTouches[0].identifier;\n  }\n  if (e.type === 'touchstart') {\n    // don't proceed touch event\n    preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n    return;\n  }\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!elementIsChildOf(targetEl, swiper.wrapperEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = e.composedPath ? e.composedPath() : e.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  if (!preventEdgeSwipe(swiper, e, startX)) {\n    return;\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl && (e.pointerType === 'mouse' || e.pointerType !== 'mouse' && !targetEl.matches(data.focusableElements))) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (e.type === 'pointermove') {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    const id = e.pointerId;\n    if (id !== data.pointerId) return;\n  }\n  let targetTouch;\n  if (e.type === 'touchmove') {\n    targetTouch = [...e.changedTouches].find(t => t.identifier === data.touchId);\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  } else {\n    targetTouch = e;\n  }\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (rtl && (pageX > touches.startX && -swiper.translate <= swiper.maxTranslate() || pageX < touches.startX && -swiper.translate >= swiper.minTranslate())) {\n      return;\n    } else if (!rtl && (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate())) {\n      return;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== e.target && e.pointerType !== 'mouse') {\n    document.activeElement.blur();\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  touches.previousX = touches.currentX;\n  touches.previousY = touches.currentY;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || e.type === 'touchmove' && data.preventTouchMoveFromPointerMove) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n  if (!data.isMoved) {\n    if (isLoop && allowLoopFix) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          bySwiperTouchMove: true\n        }\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  new Date().getTime();\n  if (params._loopSwapReset !== false && data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n    Object.assign(touches, {\n      startX: pageX,\n      startY: pageY,\n      currentX: pageX,\n      currentY: pageY,\n      startTranslate: data.currentTranslate\n    });\n    data.loopSwapReset = true;\n    data.startTranslate = data.currentTranslate;\n    return;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] - (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.activeIndex + 1] + swiper.params.spaceBetween : 0) - swiper.params.spaceBetween : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween + (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween : 0) : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetTouch;\n  const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n  if (!isTouchEvent) {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    if (e.pointerId !== data.pointerId) return;\n    targetTouch = e;\n  } else {\n    targetTouch = [...e.changedTouches].find(t => t.identifier === data.touchId);\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n    const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  data.pointerId = null;\n  data.touchId = null;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}\nfunction onDocumentTouchStart() {\n  const swiper = this;\n  if (swiper.documentTouchHandlerProceeded) return;\n  swiper.documentTouchHandlerProceeded = true;\n  if (swiper.params.touchReleaseOnEdges) {\n    swiper.el.style.touchAction = 'auto';\n  }\n}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n  if (!el || typeof el === 'string') return;\n\n  // Touch Events\n  document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n    passive: false,\n    capture\n  });\n  el[domMethod]('touchstart', swiper.onTouchStart, {\n    passive: false\n  });\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('touchmove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('touchend', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('touchcancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('contextmenu', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n  const document = getDocument();\n\n  // Get breakpoint for window/container width and update parameters\n  const breakpointsBase = params.breakpointsBase === 'window' || !params.breakpointsBase ? params.breakpointsBase : 'container';\n  const breakpointContainer = ['window', 'container'].includes(params.breakpointsBase) || !params.breakpointsBase ? swiper.el : document.querySelector(params.breakpointsBase);\n  const breakpoint = swiper.getBreakpoint(breakpoints, breakpointsBase, breakpointContainer);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasGrabCursor = swiper.params.grabCursor;\n  const isGrabCursor = breakpointParams.grabCursor;\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n  if (wasGrabCursor && !isGrabCursor) {\n    swiper.unsetGrabCursor();\n  } else if (!wasGrabCursor && isGrabCursor) {\n    swiper.setGrabCursor();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  const wasLoop = params.loop;\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  const hasLoop = swiper.params.loop;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (initialized) {\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (!wasLoop && hasLoop) {\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (wasLoop && !hasLoop) {\n      swiper.loopDestroy();\n    }\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}\nfunction getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  if (!el || typeof el === 'string') return;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\nvar classes = {\n  addClasses,\n  removeClasses\n};\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nvar checkOverflow$1 = {\n  checkOverflow\n};\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  swiperElementNodeName: 'SWIPER-CONTAINER',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  eventsPrefix: 'swiper',\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopAddBlankSlides: true,\n  loopAdditionalSlides: 0,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideFullyVisibleClass: 'swiper-slide-fully-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n      params[moduleParamName].auto = true;\n    }\n    if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n      params[moduleParamName].auto = true;\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        pointerId: null,\n        touchId: null\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getDirectionLabel(property) {\n    if (this.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index));\n  }\n  getSlideIndexWhenGrid(index) {\n    if (this.grid && this.params.grid && this.params.grid.rows > 1) {\n      if (this.params.grid.fill === 'column') {\n        index = Math.floor(index / this.params.grid.rows);\n      } else if (this.params.grid.fill === 'row') {\n        index = index % Math.ceil(this.slides.length / this.params.grid.rows);\n      }\n    }\n    return index;\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += Math.ceil(slides[i].swiperSlideSize);\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate(undefined, true);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n    if (swiper.isElement) {\n      lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n    }\n    lazyElements.forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      if (el && typeof el !== 'string') {\n        el.removeAttribute('style');\n      }\n      if (wrapperEl) {\n        wrapperEl.removeAttribute('style');\n      }\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      if (swiper.el && typeof swiper.el !== 'string') {\n        swiper.el.swiper = null;\n      }\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport { Swiper as S, defaults as d };","map":{"version":3,"names":["a","getWindow","g","getDocument","b","elementParents","q","elementStyle","e","elementChildren","setCSSProperty","h","elementOuterSize","r","elementNextAll","t","elementPrevAll","k","getTranslate","u","animateCSSModeScroll","n","nextTick","v","showWarning","c","createElement","w","elementIsChildOf","f","now","x","extend","i","elementIndex","y","deleteProps","support","calcSupport","window","document","smoothScroll","documentElement","style","touch","DocumentTouch","getSupport","deviceCached","calcDevice","userAgent","platform","navigator","ua","device","ios","android","screenWidth","screen","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","iPadScreens","indexOf","os","getDevice","overrides","browser","calcBrowser","needPerspectiveFix","isSafari","toLowerCase","String","includes","major","minor","split","map","num","Number","isWebView","test","isSafariBrowser","need3dFix","getBrowser","Resize","swiper","on","emit","observer","animationFrame","resizeHandler","destroyed","initialized","createObserver","ResizeObserver","entries","requestAnimationFrame","newWidth","newHeight","forEach","contentBoxSize","contentRect","target","el","inlineSize","blockSize","observe","removeObserver","cancelAnimationFrame","unobserve","orientationChangeHandler","params","resizeObserver","addEventListener","removeEventListener","Observer","extendParams","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","length","observerUpdate","setTimeout","attributes","childList","isElement","characterData","push","init","observeParents","containerParents","hostEl","observeSlideChildren","wrapperEl","destroy","disconnect","splice","eventsEmitter","events","handler","priority","self","eventsListeners","method","event","once","onceHandler","args","off","__emitterProxy","apply","onAny","eventsAnyListeners","offAny","index","eventHandler","data","context","Array","isArray","slice","unshift","eventsArray","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","isNaN","Object","assign","size","updateSlides","getDirectionPropertyValue","node","label","parseFloat","getPropertyValue","getDirectionLabel","slidesEl","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","call","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","swiperSize","spaceBetween","slidePosition","prevSlideSize","replace","virtualSize","slideEl","marginLeft","marginRight","marginBottom","marginTop","centeredSlides","cssMode","gridEnabled","grid","rows","initSlides","unsetSlides","slideSize","shouldResetSlideSize","slidesPerView","breakpoints","keys","filter","key","slide","updateSlide","slidesPerViewAutoSlideSize","roundLengths","Math","floor","slideStyles","getComputedStyle","currentTransform","transform","currentWebKitTransform","webkitTransform","paddingLeft","paddingRight","boxSizing","offsetWidth","swiperSlideSize","abs","slidesPerGroup","min","slidesPerGroupSkip","max","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","loop","groups","ceil","slidesBefore","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","offsetSize","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","watchOverflow","checkOverflow","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","containerModifierClass","hasClassBackfaceClassAdded","classList","contains","maxBackfaceHiddenSlides","add","remove","updateAutoHeight","speed","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","activeIndex","offsetHeight","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","toggleSlideClasses$1","condition","className","updateSlidesProgress","translate","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","minTranslate","originalSlideProgress","slideBefore","slideAfter","isFullyVisible","isVisible","slideVisibleClass","slideFullyVisibleClass","progress","originalProgress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","autoHeight","toggleSlideClasses","updateSlidesClasses","getFilteredSlide","selector","activeSlide","prevSlide","nextSlide","find","column","slideActiveClass","slideNextClass","slidePrevClass","emitSlidesClasses","processLazyPreloader","imageEl","slideSelector","closest","lazyEl","querySelector","lazyPreloaderClass","shadowRoot","unlazy","removeAttribute","preload","amount","lazyPreloadPrevNext","len","slidesPerViewDynamic","activeColumn","preloadColumns","from","slideIndexLastInView","rewind","realIndex","getActiveIndexByTranslate","normalizeSlideIndex","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","skip","firstSlideInColumn","activeSlideIndex","getAttribute","runCallbacksOnInit","updateClickedSlide","path","pathEl","matches","slideFound","clickedSlide","clickedIndex","undefined","slideToClickedSlide","update","getSwiperTranslate","axis","virtualTranslate","currentTranslate","setTranslate","byController","z","previousTranslate","newProgress","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","targetPosition","side","scrollTo","behavior","onTranslateToWrapperTransitionEnd","transitionEnd","duration","transitionDuration","transitionDelay","transitionEmit","direction","step","dir","transitionStart","transition","slideTo","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","allowSlideNext","allowSlidePrev","isInitialVirtual","scrollSnapType","_immediateVirtual","_cssModeVirtualInitialSet","initialSlide","onSlideToWrapperTransitionEnd","slideToLoop","indexAsNumber","newIndex","targetSlideIndex","cols","bothDirections","needLoopFix","loopFix","slideRealIndex","slideNext","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","_clientLeft","clientLeft","slidePrev","normalize","val","normalizedSnapGrid","isFreeMode","freeMode","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","threshold","currentSnap","nextSnap","slideToIndex","getSlideIndexWhenGrid","isGrid","getSlideIndex","loopCreate","setAttribute","clearBlankSlides","slideBlankClass","recalcSlides","loopAddBlankSlides","shouldFillGroup","shouldFillGrid","addBlankSlides","amountOfSlides","append","slidesToAdd","byMousewheel","loopedSlides","loopAdditionalSlides","fill","prependSlidesIndexes","appendSlidesIndexes","isInitialOverflow","isNext","isPrev","slidesPrepended","slidesAppended","activeColIndex","activeColIndexWithShift","colIndexToPrepend","swiperLoopMoveDOM","prepend","currentSlideTranslate","newSlideTranslate","diff","touchEventsData","startTranslate","shift","controller","control","loopParams","constructor","loopDestroy","newSlidesOrder","swiperSlideIndex","setGrabCursor","moving","simulateTouch","isLocked","touchEventsTarget","cursor","unsetGrabCursor","grabCursor","closestElement","base","__closestFrom","assignedSlot","found","getRootNode","host","preventEdgeSwipe","startX","edgeSwipeDetection","edgeSwipeThreshold","innerWidth","preventDefault","onTouchStart","originalEvent","type","pointerId","targetTouches","touchId","identifier","pageX","touches","pointerType","targetEl","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","noSwipingSelector","isTargetShadow","noSwiping","allowClick","swipeHandler","currentX","currentY","pageY","startY","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","focusableElements","nodeName","activeElement","blur","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","onTouchMove","id","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","previousX","previousY","diffX","diffY","sqrt","touchAngle","atan2","PI","preventTouchMoveFromPointerMove","cancelable","touchMoveStopPropagation","nested","stopPropagation","touchesDiff","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","allowLoopFix","evt","CustomEvent","bubbles","detail","bySwiperTouchMove","dispatchEvent","allowMomentumBounce","loopFixed","Date","getTime","_loopSwapReset","loopSwapReset","disableParentSwiper","resistanceRatio","resistance","followFinger","onTouchEnd","isTouchEvent","proceed","touchEndTime","timeDiff","pathTree","lastClickTime","currentPos","swipeToLast","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","nextEl","prevEl","onResize","setBreakpoint","isVirtualLoop","autoplay","running","paused","clearTimeout","resizeTimeout","resume","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","scrollLeft","scrollTop","onLoad","onDocumentTouchStart","documentTouchHandlerProceeded","touchAction","capture","domMethod","swiperMethod","passive","updateOnWindowResize","attachEvents","bind","detachEvents","events$1","isGridEnabled","breakpointsBase","breakpointContainer","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasGrabCursor","isGrabCursor","wasEnabled","emitContainerClasses","prop","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","wasLoop","changeDirection","isEnabled","hasLoop","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","matchMedia","prepareClasses","prefix","resultClasses","item","classNames","addClasses","suffixes","removeClasses","classes","wasLocked","lastSlideRightEdge","checkOverflow$1","defaults","swiperElementNodeName","createElements","eventsPrefix","url","uniqueNavElements","passiveListeners","wrapperClass","_emitClasses","moduleExtendParams","allModulesParams","obj","moduleParamName","moduleParams","auto","prototypes","extendedDefaults","Swiper","prototype","toString","querySelectorAll","swipers","newParams","__swiper__","modules","__modules__","mod","swiperParams","passedParams","eventName","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","property","setProgress","current","cls","join","getSlideClasses","updates","view","exact","spv","breakLoop","slideInView","complete","translateValue","translated","newDirection","needUpdate","currentDirection","changeLanguageDirection","mount","element","mounted","parentNode","toUpperCase","getWrapperSelector","trim","getWrapper","res","slideSlots","lazyElements","deleteInstance","cleanStyles","extendDefaults","newDefaults","installModule","use","module","m","prototypeGroup","protoMethod","S","d"],"sources":["/Users/florian/Documents/daily-push-landing/node_modules/swiper/shared/swiper-core.mjs"],"sourcesContent":["import { a as getWindow, g as getDocument } from './ssr-window.esm.mjs';\nimport { b as elementParents, q as elementStyle, e as elementChildren, a as setCSSProperty, h as elementOuterSize, r as elementNextAll, t as elementPrevAll, k as getTranslate, u as animateCSSModeScroll, n as nextTick, v as showWarning, c as createElement, w as elementIsChildOf, f as now, x as extend, i as elementIndex, y as deleteProps } from './utils.mjs';\n\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\n\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad)(?!\\1).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\n\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  const device = getDevice();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  const isWebView = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent);\n  const isSafariBrowser = isSafari();\n  const need3dFix = isSafariBrowser || isWebView && device.ios;\n  return {\n    isSafari: needPerspectiveFix || isSafariBrowser,\n    needPerspectiveFix,\n    need3dFix,\n    isWebView\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\n\nfunction Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}\n\nfunction Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: swiper.isElement || (typeof options.childList === 'undefined' ? true : options).childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.hostEl);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.hostEl, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nvar eventsEmitter = {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};\n\nfunction updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}\n\nfunction updateSlides() {\n  const swiper = this;\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(swiper.getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  const swiperSize = swiper.size - offsetBefore - offsetAfter;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween - offsetBefore - offsetAfter;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slides);\n  } else if (swiper.grid) {\n    swiper.grid.unsetSlides();\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides[i];\n    if (slide) {\n      if (gridEnabled) {\n        swiper.grid.updateSlide(i, slide, slides);\n      }\n      if (elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n    }\n\n    if (isVirtual && params.slidesPerView === 'auto') {\n      if (params.virtual.slidesPerViewAutoSlideSize) {\n        slideSize = params.virtual.slidesPerViewAutoSlideSize;\n      }\n      if (slideSize && slide) {\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\n        slide.style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    } else if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slide.style[swiper.getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slide) {\n        slide.style[swiper.getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slide) {\n      slide.swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[swiper.getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : swiper.getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize > swiperSize ? allSlidesSize - swiperSize : 0;\n    snapGrid = snapGrid.map(snap => {\n      if (snap <= 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const offsetSize = (offsetBefore || 0) + (offsetAfter || 0);\n    if (allSlidesSize + offsetSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize - offsetSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  swiper.emit('slidesUpdated');\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}\n\nfunction updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}\n\nfunction updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}\n\nconst toggleSlideClasses$1 = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isFullyVisible = slideBefore >= 0 && slideBefore <= swiper.size - swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n    }\n    toggleSlideClasses$1(slide, isVisible, params.slideVisibleClass);\n    toggleSlideClasses$1(slide, isFullyVisible, params.slideFullyVisibleClass);\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}\n\nfunction updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}\n\nconst toggleSlideClasses = (slideEl, condition, className) => {\n  if (condition && !slideEl.classList.contains(className)) {\n    slideEl.classList.add(className);\n  } else if (!condition && slideEl.classList.contains(className)) {\n    slideEl.classList.remove(className);\n  }\n};\nfunction updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  let activeSlide;\n  let prevSlide;\n  let nextSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    if (gridEnabled) {\n      activeSlide = slides.find(slideEl => slideEl.column === activeIndex);\n      nextSlide = slides.find(slideEl => slideEl.column === activeIndex + 1);\n      prevSlide = slides.find(slideEl => slideEl.column === activeIndex - 1);\n    } else {\n      activeSlide = slides[activeIndex];\n    }\n  }\n  if (activeSlide) {\n    if (!gridEnabled) {\n      // Next Slide\n      nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !nextSlide) {\n        nextSlide = slides[0];\n      }\n\n      // Prev Slide\n      prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n      if (params.loop && !prevSlide === 0) {\n        prevSlide = slides[slides.length - 1];\n      }\n    }\n  }\n  slides.forEach(slideEl => {\n    toggleSlideClasses(slideEl, slideEl === activeSlide, params.slideActiveClass);\n    toggleSlideClasses(slideEl, slideEl === nextSlide, params.slideNextClass);\n    toggleSlideClasses(slideEl, slideEl === prevSlide, params.slidePrevClass);\n  });\n  swiper.emitSlidesClasses();\n}\n\nconst processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (!lazyEl && swiper.isElement) {\n      if (slideEl.shadowRoot) {\n        lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n      } else {\n        // init later\n        requestAnimationFrame(() => {\n          if (slideEl.shadowRoot) {\n            lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n            if (lazyEl) lazyEl.remove();\n          }\n        });\n      }\n    }\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nconst preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  if (swiper.params.grid && swiper.params.grid.rows > 1) {\n    const activeColumn = activeIndex;\n    const preloadColumns = [activeColumn - amount];\n    preloadColumns.push(...Array.from({\n      length: amount\n    }).map((_, i) => {\n      return activeColumn + slidesPerView + i;\n    }));\n    swiper.slides.forEach((slideEl, i) => {\n      if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n    });\n    return;\n  }\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind || swiper.params.loop) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n        unlazy(swiper, i);\n      }\n    }\n  }\n};\n\nfunction getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nfunction updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex && !swiper.params.loop) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n  if (activeIndex === previousIndex && swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n    swiper.realIndex = getVirtualRealIndex(activeIndex);\n    return;\n  }\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (gridEnabled) {\n    const firstSlideInColumn = swiper.slides.find(slideEl => slideEl.column === activeIndex);\n    let activeSlideIndex = parseInt(firstSlideInColumn.getAttribute('data-swiper-slide-index'), 10);\n    if (Number.isNaN(activeSlideIndex)) {\n      activeSlideIndex = Math.max(swiper.slides.indexOf(firstSlideInColumn), 0);\n    }\n    realIndex = Math.floor(activeSlideIndex / params.grid.rows);\n  } else if (swiper.slides[activeIndex]) {\n    const slideIndex = swiper.slides[activeIndex].getAttribute('data-swiper-slide-index');\n    if (slideIndex) {\n      realIndex = parseInt(slideIndex, 10);\n    } else {\n      realIndex = activeIndex;\n    }\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    if (previousRealIndex !== realIndex) {\n      swiper.emit('realIndexChange');\n    }\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide(el, path) {\n  const swiper = this;\n  const params = swiper.params;\n  let slide = el.closest(`.${params.slideClass}, swiper-slide`);\n  if (!slide && swiper.isElement && path && path.length > 1 && path.includes(el)) {\n    [...path.slice(path.indexOf(el) + 1, path.length)].forEach(pathEl => {\n      if (!slide && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {\n        slide = pathEl;\n      }\n    });\n  }\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};\n\nfunction getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}\n\nfunction setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate() {\n  return -this.snapGrid[0];\n}\n\nfunction maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}\n\nfunction translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          swiper.animating = false;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}\n\nvar translate = {\n  getTranslate: getSwiperTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};\n\nfunction setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n    swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : '';\n  }\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && dir === 'reset') {\n    swiper.emit(`slideResetTransition${step}`);\n  } else if (runCallbacks && activeIndex !== previousIndex) {\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}\n\nfunction transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}\n\nfunction transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};\n\nfunction slideTo(index = 0, speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (!enabled && !internal && !initial || swiper.destroyed || swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // initial virtual\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  const isInitialVirtual = isVirtual && initial;\n  // Update Index\n  if (!isInitialVirtual && (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  const browser = getBrowser();\n  const isSafari = browser.isSafari;\n  if (isVirtual && !initial && isSafari && swiper.isElement) {\n    swiper.virtual.update(false, false, slideIndex);\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}\n\nfunction slideToLoop(index = 0, speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const gridEnabled = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      let targetSlideIndex;\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        targetSlideIndex = swiper.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex).column;\n      } else {\n        targetSlideIndex = swiper.getSlideIndexByData(newIndex);\n      }\n      const cols = gridEnabled ? Math.ceil(swiper.slides.length / swiper.params.grid.rows) : swiper.slides.length;\n      const {\n        centeredSlides,\n        slidesOffsetBefore,\n        slidesOffsetAfter\n      } = swiper.params;\n      const bothDirections = centeredSlides || !!slidesOffsetBefore || !!slidesOffsetAfter;\n      let slidesPerView = swiper.params.slidesPerView;\n      if (slidesPerView === 'auto') {\n        slidesPerView = swiper.slidesPerViewDynamic();\n      } else {\n        slidesPerView = Math.ceil(parseFloat(swiper.params.slidesPerView, 10));\n        if (bothDirections && slidesPerView % 2 === 0) {\n          slidesPerView = slidesPerView + 1;\n        }\n      }\n      let needLoopFix = cols - targetSlideIndex < slidesPerView;\n      if (bothDirections) {\n        needLoopFix = needLoopFix || targetSlideIndex < Math.ceil(slidesPerView / 2);\n      }\n      if (internal && bothDirections && swiper.params.slidesPerView !== 'auto' && !gridEnabled) {\n        needLoopFix = false;\n      }\n      if (needLoopFix) {\n        const direction = bothDirections ? targetSlideIndex < swiper.activeIndex ? 'prev' : 'next' : targetSlideIndex - swiper.activeIndex - 1 < swiper.params.slidesPerView ? 'next' : 'prev';\n        swiper.loopFix({\n          direction,\n          slideTo: true,\n          activeSlideIndex: direction === 'next' ? targetSlideIndex + 1 : targetSlideIndex - cols + 1,\n          slideRealIndex: direction === 'next' ? swiper.realIndex : undefined\n        });\n      }\n      if (gridEnabled) {\n        const slideIndex = newIndex * swiper.params.grid.rows;\n        newIndex = swiper.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === slideIndex).column;\n      } else {\n        newIndex = swiper.getSlideIndexByData(newIndex);\n      }\n    }\n  }\n  requestAnimationFrame(() => {\n    swiper.slideTo(newIndex, speed, runCallbacks, internal);\n  });\n  return swiper;\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n    if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {\n      requestAnimationFrame(() => {\n        swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n      });\n      return true;\n    }\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled || swiper.destroyed) return swiper;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const isFreeMode = params.freeMode && params.freeMode.enabled;\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && (params.cssMode || isFreeMode)) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = isFreeMode ? snapGrid[prevSnapIndex] : snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {\n    requestAnimationFrame(() => {\n      swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    });\n    return true;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset(speed, runCallbacks = true, internal) {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest(speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  if (typeof speed === 'undefined') {\n    speed = swiper.params.speed;\n  }\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide() {\n  const swiper = this;\n  if (swiper.destroyed) return;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.getSlideIndexWhenGrid(swiper.clickedIndex);\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  const isGrid = swiper.grid && swiper.params.grid && swiper.params.grid.rows > 1;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      swiper.slideToLoop(realIndex);\n    } else if (slideToIndex > (isGrid ? (swiper.slides.length - slidesPerView) / 2 - (swiper.params.grid.rows - 1) : swiper.slides.length - slidesPerView)) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};\n\nfunction loopCreate(slideRealIndex, initial) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const initSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    slides.forEach((el, index) => {\n      el.setAttribute('data-swiper-slide-index', index);\n    });\n  };\n  const clearBlankSlides = () => {\n    const slides = elementChildren(slidesEl, `.${params.slideBlankClass}`);\n    slides.forEach(el => {\n      el.remove();\n    });\n    if (slides.length > 0) {\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    }\n  };\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (params.loopAddBlankSlides && (params.slidesPerGroup > 1 || gridEnabled)) {\n    clearBlankSlides();\n  }\n  const slidesPerGroup = params.slidesPerGroup * (gridEnabled ? params.grid.rows : 1);\n  const shouldFillGroup = swiper.slides.length % slidesPerGroup !== 0;\n  const shouldFillGrid = gridEnabled && swiper.slides.length % params.grid.rows !== 0;\n  const addBlankSlides = amountOfSlides => {\n    for (let i = 0; i < amountOfSlides; i += 1) {\n      const slideEl = swiper.isElement ? createElement('swiper-slide', [params.slideBlankClass]) : createElement('div', [params.slideClass, params.slideBlankClass]);\n      swiper.slidesEl.append(slideEl);\n    }\n  };\n  if (shouldFillGroup) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = slidesPerGroup - swiper.slides.length % slidesPerGroup;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else if (shouldFillGrid) {\n    if (params.loopAddBlankSlides) {\n      const slidesToAdd = params.grid.rows - swiper.slides.length % params.grid.rows;\n      addBlankSlides(slidesToAdd);\n      swiper.recalcSlides();\n      swiper.updateSlides();\n    } else {\n      showWarning('Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)');\n    }\n    initSlides();\n  } else {\n    initSlides();\n  }\n  const bothDirections = params.centeredSlides || !!params.slidesOffsetBefore || !!params.slidesOffsetAfter;\n  swiper.loopFix({\n    slideRealIndex,\n    direction: bothDirections ? undefined : 'next',\n    initial\n  });\n}\n\nfunction loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  initial,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  const {\n    centeredSlides,\n    slidesOffsetBefore,\n    slidesOffsetAfter,\n    initialSlide\n  } = params;\n  const bothDirections = centeredSlides || !!slidesOffsetBefore || !!slidesOffsetAfter;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!bothDirections && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (bothDirections && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  let slidesPerView = params.slidesPerView;\n  if (slidesPerView === 'auto') {\n    slidesPerView = swiper.slidesPerViewDynamic();\n  } else {\n    slidesPerView = Math.ceil(parseFloat(params.slidesPerView, 10));\n    if (bothDirections && slidesPerView % 2 === 0) {\n      slidesPerView = slidesPerView + 1;\n    }\n  }\n  const slidesPerGroup = params.slidesPerGroupAuto ? slidesPerView : params.slidesPerGroup;\n  let loopedSlides = bothDirections ? Math.max(slidesPerGroup, Math.ceil(slidesPerView / 2)) : slidesPerGroup;\n  if (loopedSlides % slidesPerGroup !== 0) {\n    loopedSlides += slidesPerGroup - loopedSlides % slidesPerGroup;\n  }\n  loopedSlides += params.loopAdditionalSlides;\n  swiper.loopedSlides = loopedSlides;\n  const gridEnabled = swiper.grid && params.grid && params.grid.rows > 1;\n  if (slides.length < slidesPerView + loopedSlides || swiper.params.effect === 'cards' && slides.length < slidesPerView + loopedSlides * 2) {\n    showWarning('Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled or not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters');\n  } else if (gridEnabled && params.grid.fill === 'row') {\n    showWarning('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');\n  }\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  const cols = gridEnabled ? Math.ceil(slides.length / params.grid.rows) : slides.length;\n  const isInitialOverflow = initial && cols - initialSlide < slidesPerView && !bothDirections;\n  let activeIndex = isInitialOverflow ? initialSlide : swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(slides.find(el => el.classList.contains(params.slideActiveClass)));\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  const activeColIndex = gridEnabled ? slides[activeSlideIndex].column : activeSlideIndex;\n  const activeColIndexWithShift = activeColIndex + (bothDirections && typeof setTranslate === 'undefined' ? -slidesPerView / 2 + 0.5 : 0);\n  // prepend last slides before start\n  if (activeColIndexWithShift < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeColIndexWithShift, slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeColIndexWithShift; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        const colIndexToPrepend = cols - index - 1;\n        for (let i = slides.length - 1; i >= 0; i -= 1) {\n          if (slides[i].column === colIndexToPrepend) prependSlidesIndexes.push(i);\n        }\n        // slides.forEach((slide, slideIndex) => {\n        //   if (slide.column === colIndexToPrepend) prependSlidesIndexes.push(slideIndex);\n        // });\n      } else {\n        prependSlidesIndexes.push(cols - index - 1);\n      }\n    }\n  } else if (activeColIndexWithShift + slidesPerView > cols - loopedSlides) {\n    slidesAppended = Math.max(activeColIndexWithShift - (cols - loopedSlides * 2), slidesPerGroup);\n    if (isInitialOverflow) {\n      slidesAppended = Math.max(slidesAppended, slidesPerView - cols + initialSlide + 1);\n    }\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / cols) * cols;\n      if (gridEnabled) {\n        slides.forEach((slide, slideIndex) => {\n          if (slide.column === index) appendSlidesIndexes.push(slideIndex);\n        });\n      } else {\n        appendSlidesIndexes.push(index);\n      }\n    }\n  }\n  swiper.__preventObserver__ = true;\n  requestAnimationFrame(() => {\n    swiper.__preventObserver__ = false;\n  });\n  if (swiper.params.effect === 'cards' && slides.length < slidesPerView + loopedSlides * 2) {\n    if (appendSlidesIndexes.includes(activeSlideIndex)) {\n      appendSlidesIndexes.splice(appendSlidesIndexes.indexOf(activeSlideIndex), 1);\n    }\n    if (prependSlidesIndexes.includes(activeSlideIndex)) {\n      prependSlidesIndexes.splice(prependSlidesIndexes.indexOf(activeSlideIndex), 1);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(slides[index]);\n      slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  } else if (gridEnabled && (prependSlidesIndexes.length > 0 && isPrev || appendSlidesIndexes.length > 0 && isNext)) {\n    swiper.slides.forEach((slide, slideIndex) => {\n      swiper.grid.updateSlide(slideIndex, slide, swiper.slides);\n    });\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + Math.ceil(slidesPrepended), 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          const shift = gridEnabled ? prependSlidesIndexes.length / params.grid.rows : prependSlidesIndexes.length;\n          swiper.slideTo(swiper.activeIndex + shift, 0, false, true);\n          swiper.touchEventsData.currentTranslate = swiper.translate;\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touchEventsData.startTranslate = swiper.touchEventsData.startTranslate - diff;\n            swiper.touchEventsData.currentTranslate = swiper.touchEventsData.currentTranslate - diff;\n          }\n        }\n      } else {\n        const shift = gridEnabled ? appendSlidesIndexes.length / params.grid.rows : appendSlidesIndexes.length;\n        swiper.slideTo(swiper.activeIndex - shift, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix({\n          ...loopParams,\n          slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo : false\n        });\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix({\n        ...loopParams,\n        slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo : false\n      });\n    }\n  }\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || !slidesEl || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};\n\nfunction setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nfunction unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor\n};\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nfunction preventEdgeSwipe(swiper, event, startX) {\n  const window = getWindow();\n  const {\n    params\n  } = swiper;\n  const edgeSwipeDetection = params.edgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n      return true;\n    }\n    return false;\n  }\n  return true;\n}\nfunction onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const data = swiper.touchEventsData;\n  if (e.type === 'pointerdown') {\n    if (data.pointerId !== null && data.pointerId !== e.pointerId) {\n      return;\n    }\n    data.pointerId = e.pointerId;\n  } else if (e.type === 'touchstart' && e.targetTouches.length === 1) {\n    data.touchId = e.targetTouches[0].identifier;\n  }\n  if (e.type === 'touchstart') {\n    // don't proceed touch event\n    preventEdgeSwipe(swiper, e, e.targetTouches[0].pageX);\n    return;\n  }\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!elementIsChildOf(targetEl, swiper.wrapperEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = e.composedPath ? e.composedPath() : e.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  if (!preventEdgeSwipe(swiper, e, startX)) {\n    return;\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl && (e.pointerType === 'mouse' || e.pointerType !== 'mouse' && !targetEl.matches(data.focusableElements))) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (e.type === 'pointermove') {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    const id = e.pointerId;\n    if (id !== data.pointerId) return;\n  }\n  let targetTouch;\n  if (e.type === 'touchmove') {\n    targetTouch = [...e.changedTouches].find(t => t.identifier === data.touchId);\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  } else {\n    targetTouch = e;\n  }\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (rtl && (pageX > touches.startX && -swiper.translate <= swiper.maxTranslate() || pageX < touches.startX && -swiper.translate >= swiper.minTranslate())) {\n      return;\n    } else if (!rtl && (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate())) {\n      return;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== e.target && e.pointerType !== 'mouse') {\n    document.activeElement.blur();\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  touches.previousX = touches.currentX;\n  touches.previousY = touches.currentY;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || e.type === 'touchmove' && data.preventTouchMoveFromPointerMove) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  const allowLoopFix = swiper.touchesDirection === 'next' && swiper.allowSlideNext || swiper.touchesDirection === 'prev' && swiper.allowSlidePrev;\n  if (!data.isMoved) {\n    if (isLoop && allowLoopFix) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          bySwiperTouchMove: true\n        }\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  new Date().getTime();\n  if (params._loopSwapReset !== false && data.isMoved && data.allowThresholdMove && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {\n    Object.assign(touches, {\n      startX: pageX,\n      startY: pageY,\n      currentX: pageX,\n      currentY: pageY,\n      startTranslate: data.currentTranslate\n    });\n    data.loopSwapReset = true;\n    data.startTranslate = data.currentTranslate;\n    return;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.slidesSizesGrid[swiper.activeIndex + 1] - (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.activeIndex + 1] + swiper.params.spaceBetween : 0) - swiper.params.spaceBetween : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && allowLoopFix && !loopFixed && data.allowThresholdMove && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween + (params.slidesPerView !== 'auto' && swiper.slides.length - params.slidesPerView >= 2 ? swiper.slidesSizesGrid[swiper.slidesSizesGrid.length - 1] + swiper.params.spaceBetween : 0) : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetTouch;\n  const isTouchEvent = e.type === 'touchend' || e.type === 'touchcancel';\n  if (!isTouchEvent) {\n    if (data.touchId !== null) return; // return from pointer if we use touch\n    if (e.pointerId !== data.pointerId) return;\n    targetTouch = e;\n  } else {\n    targetTouch = [...e.changedTouches].find(t => t.identifier === data.touchId);\n    if (!targetTouch || targetTouch.identifier !== data.touchId) return;\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(e.type)) {\n    const proceed = ['pointercancel', 'contextmenu'].includes(e.type) && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  data.pointerId = null;\n  data.touchId = null;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && e.pointerType === 'mouse') return;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target, pathTree);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 && !data.loopSwapReset || data.currentTranslate === data.startTranslate && !data.loopSwapReset) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  const swipeToLast = currentPos >= -swiper.maxTranslate() && !swiper.params.loop;\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (swipeToLast || currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (swipeToLast || currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nfunction onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n    return;\n  }\n  swiper.update();\n}\n\nfunction onDocumentTouchStart() {\n  const swiper = this;\n  if (swiper.documentTouchHandlerProceeded) return;\n  swiper.documentTouchHandlerProceeded = true;\n  if (swiper.params.touchReleaseOnEdges) {\n    swiper.el.style.touchAction = 'auto';\n  }\n}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n  if (!el || typeof el === 'string') return;\n\n  // Touch Events\n  document[domMethod]('touchstart', swiper.onDocumentTouchStart, {\n    passive: false,\n    capture\n  });\n  el[domMethod]('touchstart', swiper.onTouchStart, {\n    passive: false\n  });\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('touchmove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('touchend', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('touchcancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('contextmenu', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  swiper.onDocumentTouchStart = onDocumentTouchStart.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nvar events$1 = {\n  attachEvents,\n  detachEvents\n};\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n  const document = getDocument();\n\n  // Get breakpoint for window/container width and update parameters\n  const breakpointsBase = params.breakpointsBase === 'window' || !params.breakpointsBase ? params.breakpointsBase : 'container';\n  const breakpointContainer = ['window', 'container'].includes(params.breakpointsBase) || !params.breakpointsBase ? swiper.el : document.querySelector(params.breakpointsBase);\n  const breakpoint = swiper.getBreakpoint(breakpoints, breakpointsBase, breakpointContainer);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasGrabCursor = swiper.params.grabCursor;\n  const isGrabCursor = breakpointParams.grabCursor;\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n  if (wasGrabCursor && !isGrabCursor) {\n    swiper.unsetGrabCursor();\n  } else if (!wasGrabCursor && isGrabCursor) {\n    swiper.setGrabCursor();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    if (typeof breakpointParams[prop] === 'undefined') return;\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  const wasLoop = params.loop;\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  const hasLoop = swiper.params.loop;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (initialized) {\n    if (needsReLoop) {\n      swiper.loopDestroy();\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (!wasLoop && hasLoop) {\n      swiper.loopCreate(realIndex);\n      swiper.updateSlides();\n    } else if (wasLoop && !hasLoop) {\n      swiper.loopDestroy();\n    }\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}\n\nfunction getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = {\n  setBreakpoint,\n  getBreakpoint\n};\n\nfunction prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nfunction addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}\n\nfunction removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  if (!el || typeof el === 'string') return;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}\n\nvar classes = {\n  addClasses,\n  removeClasses\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nvar checkOverflow$1 = {\n  checkOverflow\n};\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  swiperElementNodeName: 'SWIPER-CONTAINER',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  eventsPrefix: 'swiper',\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopAddBlankSlides: true,\n  loopAdditionalSlides: 0,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideFullyVisibleClass: 'swiper-slide-fully-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};\n\nfunction moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (moduleParamName === 'navigation' && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {\n      params[moduleParamName].auto = true;\n    }\n    if (['pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {\n      params[moduleParamName].auto = true;\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}\n\n/* eslint no-param-reassign: \"off\" */\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events: events$1,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        pointerId: null,\n        touchId: null\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getDirectionLabel(property) {\n    if (this.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.find(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index));\n  }\n  getSlideIndexWhenGrid(index) {\n    if (this.grid && this.params.grid && this.params.grid.rows > 1) {\n      if (this.params.grid.fill === 'column') {\n        index = Math.floor(index / this.params.grid.rows);\n      } else if (this.params.grid.fill === 'row') {\n        index = index % Math.ceil(this.slides.length / this.params.grid.rows);\n      }\n    }\n    return index;\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (typeof params.slidesPerView === 'number') return params.slidesPerView;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex] ? Math.ceil(slides[activeIndex].swiperSlideSize) : 0;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += Math.ceil(slides[i].swiperSlideSize);\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n      setTranslate();\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n        const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === swiper.params.swiperElementNodeName.toUpperCase()) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,\n      hostEl: swiper.isElement ? el.parentNode.host : el,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate(undefined, true);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    const lazyElements = [...swiper.el.querySelectorAll('[loading=\"lazy\"]')];\n    if (swiper.isElement) {\n      lazyElements.push(...swiper.hostEl.querySelectorAll('[loading=\"lazy\"]'));\n    }\n    lazyElements.forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      if (el && typeof el !== 'string') {\n        el.removeAttribute('style');\n      }\n      if (wrapperEl) {\n        wrapperEl.removeAttribute('style');\n      }\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideFullyVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      if (swiper.el && typeof swiper.el !== 'string') {\n        swiper.el.swiper = null;\n      }\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\n\nexport { Swiper as S, defaults as d };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}